
properties([
    parameters([
        string(name: "dir", defaultValue: "/Users", description: "")
    ])
])

pipeline {
    agent any
    stages{
        stage("Install Docker") {
            steps {
                script {
                        if [ -x "$(command -v docker)" ]; then
                            sh 'docker --version'
                        else
                         //   sh ' /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" '
                            sh 'sudo brew install docker'
                            sh 'sudo brew services start docker'
                            sh 'docker --version'
                            sh 'export DOCKER_CLI_EXPERIMENTAL=enable'
                        fi

                }
            }
        }
    }

 }
    /*
        stage('dir folder') {
            steps {
               sh "docker --version"
            }
        }
        stage('run postman with docker'){
            steps{
                sh "ls -l"
                sh "node --version"
                sh "newman --version"

            }
        }

         sh "docker run -t postman/newman run postman_collection.json"
        stage('run postman collection') {
            steps{
                sh "ls -l"
                sh "/usr/local/lib/node_modules/newman/bin/newman.js run https://api.postman.com/collections/9753674-6982a4bc-b020-4dc0-ba06-1fcb826dae91?access_key=${ACCESS_KEY}"
            }
        }
        stage('run python collection') {
            steps {
                sh "export PATH=$PATH:/Users/juliana.chaves/Library/Python/3.9/bin"
                sh "pip3 install pytest --force-reinstall"
                sh "pip3 install requests --force-reinstall"
                sh "pytest -s test_api_one.py"
            }
        }
        */


